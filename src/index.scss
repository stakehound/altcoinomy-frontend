@import "theme/variables.scss";
@import "~bootstrap/scss/bootstrap";

@mixin crypted-status-variant($status-color) {
  color: theme-color-level($status-color, $alert-color-level);
  @include gradient-bg(theme-color-level($status-color, $alert-bg-level));
  border-color: theme-color-level($status-color, $alert-border-level);
}

.error {
  color: $danger;
}

.ico-logo {
  height: 64px;
  width: auto;
}

.pointer {
  cursor: pointer;
}

.collapsing {
  -webkit-transition: none;
  transition: none;
  display: none;
}

.custom-checkbox {
  display: inline-block;
}

.custom-checkbox.custom-control > span.required:after,
label.required:after {
  content: "*";
  display: inline-block;
  color: $warning;
  padding-left: 3px;
  font-size: 1.75em;
  line-height: 0;
}

.input-group {
  &.crypted {
    .input-group-prepend {
      flex-grow: 1;
      margin-right: 0;

      .input-group-text {
        flex-grow: 1;
        border-radius: 0.25rem;
        cursor: pointer;

        &.status-FILLED {
          @include crypted-status-variant("warning");
        }

        &.status-REFUSED {
          @include crypted-status-variant("danger");
        }

        &.status-ACCEPTED {
          @include crypted-status-variant("success");
        }
      }
    }

    .input-group-append {
      margin-left: -2px;

      .input-group-text {
        cursor: pointer;
      }
    }
  }
}

.iframe-extra-document {
  min-width: 100%;
  min-height: 300px;
  border: $input-border-width solid $input-border-color;
  @include border-radius($input-border-radius, 0);
}

.wrapper-signature-pad {
  border: $input-border-width solid $input-border-color;
  @include border-radius($input-border-radius, 0);

  &.is-invalid {
    border-color: $form-feedback-invalid-color;

    & ~ div .invalid-feedback,
    & ~ div .valid-feedback {
      display: block;
    }
  }

  canvas {
    cursor: crosshair;
  }
}

.react-datepicker-wrapper {
  display: block;

  &.is-invalid {
    & + .invalid-feedback,
    & + .valid-feedback {
      display: block;
    }
  }

  .input-group > & {
    flex: 1 1 auto;

    & .form-control {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
  }
}

.react-datepicker-popper {
  z-index: 2;
}

.react-datepicker__triangle {
  left: 50px !important;
}

.card.is-not-active,
.list-group-item.is-not-active {
  background-image: repeating-linear-gradient(-45deg, transparent 0 20px, rgba(0, 0, 0, 0.05) 20px 40px);
  pointer-events: none;

  &.current {
    background-color: rgba(0, 255, 0, 0.2);
  }
}

.invalid-feedback,
.valid-feedback {
  display: block;
}

.calendar {
  white-space: nowrap;
  .card {
    flex: none;
    @include media-breakpoint-up(lg) {
      width: calc(100% / 6);
    }
  }

  .current {
    background-color: rgba(0, 255, 0, 0.2);
  }
}

.subscription-submitted {
  input,
  select,
  textarea {
    &.required {
      &:invalid {
        border: 1px solid red;
      }
    }
  }

  .file-input-required {
    &.status-empty {
      border: 1px solid red;
      border-radius: 4px;
    }
  }
}

.valid-feedback {
  color: $green;
}

iframe.video-conference {
  width: 100%;
  min-height: 300px;
  height: 70vh;
  border: $input-border-width solid $input-border-color;
  @include border-radius($input-border-radius, 0);
}

.img-100 {
  width: 100%;
  display: block;
}

@import "theme/theme.scss";
